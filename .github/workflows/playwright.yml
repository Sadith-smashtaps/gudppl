name: Playwright Tests (Smoke Test Only)

on:
  push:
    branches: [ '**' ]
    paths:
      - 'tests/smokeTest.spec.ts'  # Only trigger on changes to smoke test
      - '.github/workflows/playwright.yml'
      - 'package.json'
      - 'package-lock.json'
  pull_request:
    branches: [ main ]
    paths:
      - 'tests/smokeTest.spec.ts'  # Only trigger on changes to smoke test
      - '.github/workflows/playwright.yml'
      - 'package.json'
      - 'package-lock.json'

jobs:
  test:
    name: Run Smoke Test (Chromium)
    timeout-minutes: 15
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright
      run: |
        # Install only Chromium browser
        npx playwright install chromium --with-deps
        # Verify installation
        npx playwright --version
    
    - name: Create test-results directory
      run: mkdir -p test-results
    
    - name: Run Smoke Test
      run: |
        # Explicitly run only smokeTest.spec.ts
        # This is the only test file that will be executed
        echo "Running smoke test: tests/smokeTest.spec.ts"
        PLAYWRIGHT_BROWSERS_PATH=~/.cache/ms-playwright npx playwright test tests/smokeTest.spec.ts \
          --retries=1 \
          --timeout=120000 \
          --project=chromium \
          --reporter=list,html \
          --workers=1 \
          --output=test-results
      env:
        CI: true
        PWDEBUG: 0
        # Add environment variables for faster execution
        PLAYWRIGHT_SKIP_BROWSER_GC: 1
        PLAYWRIGHT_DISABLE_LOGGING: 0
        # Add environment variables for test stability
        PLAYWRIGHT_HTML_REPORT: ./playwright-report
        PLAYWRIGHT_BROWSERS_PATH: ~/.cache/ms-playwright
        PLAYWRIGHT_TEST_BASE_URL: ${{ secrets.TEST_BASE_URL }}
    
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 7

    - name: Upload test screenshots
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: test-results/
        retention-days: 7

    - name: Check test status
      if: always()
      run: |
        if [ -f "test-results/*-failure.png" ]; then
          echo "::warning::Test failures detected. Check the test-results artifact for screenshots."
          exit 1
        fi 